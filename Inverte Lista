class NodoLista:
    def __init__(self, dado=0, proximo_nodo=None):
        self.dado = dado
        self.proximo = proximo_nodo
    def __repr__(self):
        return '%s : %s' % (self.dado, self.proximo)
class ListaEncadeada:
    def __init__(self):
        self.head = None
    def __repr__(self):
        return "[" + str(self.head) + "]"
    def mostra(self):
        self.head = self.head.proximo
        if self.head is not None:
            self.mostra()
    def deleta(self,nodo,number,elementoLista):
        if elementoLista == 0:
            if self.head.dado == number:
                self.head = self.head.proximo
            else:
                self.deleta(nodo.proximo,number,elementoLista+1)
        else:
            if nodo.dado == number:
                self.head.proximo = nodo.proximo
            else:
                self.head = self.head.proximo
                self.deleta(nodo.proximo,number,elementoLista+1)
    def inverte(self,elementoLista,lista_tam):
            while elementoLista < lista_tam:
                aux = self.head.dado
                self.head.dado = self.head.proximo.dado
                self.head.proximo.dado = aux
                self.head = self.head.proximo
                elementoLista += 1

i = 0
tam = 5
while i < tam:
    if i == 0:
        lista = ListaEncadeada()
        lista.head = NodoLista(i)
    else:
        novo_nodo = NodoLista(i)
        novo_nodo.proximo = lista.head
        lista.head = novo_nodo
    i += 1

PrimeiroNodo = NodoLista()
PrimeiroNodo.proximo = lista.head
AuxNodo = NodoLista()
i = 0
while i < tam:
    lista.inverte(i,tam-1)
    i += 1
    lista.head = PrimeiroNodo.proximo
lista.head = PrimeiroNodo.proximo
print(lista)
