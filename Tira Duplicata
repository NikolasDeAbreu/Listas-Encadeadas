class NodoLista:
    def __init__(self, dado=0, proximo_nodo=None):
        self.dado = dado
        self.proximo = proximo_nodo
    def __repr__(self):
        return '%s : %s' % (self.dado, self.proximo)
class ListaEncadeada:
    def __init__(self):
        self.head = None
    def __repr__(self):
        return "[" + str(self.head) + "]"
    def mostra(self):
        self.head = self.head.proximo
        if self.head is not None:
            self.mostra()
    def deleta(self,nodo,number,elementoLista):
        if elementoLista == 0:
            if self.head.dado == number:
                self.head = self.head.proximo
            else:
                self.deleta(nodo.proximo,number,elementoLista+1)
        else:
            if nodo.dado == number:
                self.head.proximo = nodo.proximo
            else:
                self.head = self.head.proximo
                self.deleta(nodo.proximo,number,elementoLista+1)

    def inverte(self,elementoLista,lista_tam):
            while elementoLista < lista_tam:
                aux = self.head.dado
                self.head.dado = self.head.proximo.dado
                self.head.proximo.dado = aux
                self.head = self.head.proximo
                elementoLista += 1

    def inserir(self,valor):
        if lista.head.dado == 0 and lista.head.proximo is None:
            lista.head.dado = valor
        else:
            AuxNodo = NodoLista(valor)
            AuxNodo.proximo = self.head
            self.head = AuxNodo

    def tiraRep(self):
        NovaLista = ListaEncadeada()
        NovaLista.head = NodoLista(self.head.dado)
        Head = NodoLista()
        Head.proximo = NovaLista.head
        while True:
            copia = True
            while True:
                if self.head.dado == NovaLista.head.dado:
                    copia = False
                    break
                else:
                    if NovaLista.head.proximo is not None:
                        NovaLista.head = NovaLista.head.proximo
                    else:
                        break
            if copia is True:
                NovaLista.head = Head.proximo
                NovaLista.inserir(self.head.dado)
                Head.proximo = NovaLista.head
            else:
                NovaLista.head = Head.proximo
            if self.head.proximo is not None:
                self.head = self.head.proximo
            else:
                break
        return NovaLista

valores = [28,40,12,68,68,1,3,28,9,12]
lista = ListaEncadeada()
lista.head = NodoLista()
for itr in valores:
    lista.inserir(itr)
lista = lista.tiraRep()
print(lista)

