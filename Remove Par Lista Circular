import random
class NodoLista:
    def __init__(self, dado=None,next_nodo=None):
        self.dado = dado
        self.next = next_nodo
class ListaEncadeada:
    def __init__(self):
        self.head = None

    def inserir(self,valor):
        if self.head is None:
            self.head = NodoLista(valor)
            self.head.next = self.head
        else:
            NovoNodo = NodoLista(valor)
            AuxNodo = self.head
            while AuxNodo.next != self.head:
                AuxNodo = AuxNodo.next
            AuxNodo.next = NovoNodo
            NovoNodo.next = self.head

    def mostra(self):
        print(self.head.dado)
        AuxNodo = self.head.next
        while AuxNodo != self.head:
            print(AuxNodo.dado)
            AuxNodo = AuxNodo.next

    def remove(self,valor,nodo_um=None,nodo_dois=None):
        if nodo_um is None and nodo_dois is None:
            nodo_um = self.head
            nodo_dois = self.head.next
        if self.head.dado == valor:
            while nodo_dois.next != self.head:
                nodo_dois = nodo_dois.next
            self.head = self.head.next
            nodo_dois.next = self.head
            nodo_um = self.head
            nodo_dois = self.head
        else:
            if nodo_dois.dado == valor:
                nodo_um.next = nodo_dois.next
        if nodo_dois.next != self.head:
            self.remove(valor,nodo_um.next,nodo_dois.next)

    def removePar(self,nodo=None):
        if nodo is None:
            nodo = self.head
        if (self.head.dado % 2) == 0:
            self.remove(self.head.dado)
            self.removePar()
        else:
            if (nodo.dado % 2) == 0:
                self.remove(nodo.dado)
                nodo = self.head
        if nodo.next != self.head:
            self.removePar(nodo.next)

valores = [4,13,32,159,10]
lista = ListaEncadeada()
for itr in valores:
    lista.inserir(itr)
lista.removePar()
lista.mostra()
